extends ui_layout
  
block content

  
  
  .computer.only.tablet.only.four.wide.column 
    .ui.card
      .image
        if user.profile.picture
          img(src='/user_post/'+user.profile.picture)
        else
          img(src=user.gravatar(60))
      .content
        a.header= user.profile.name || user.email || user.id
        .meta="@"+user.username
        .description=user.profile.bio
        .description
          if user.profile.location
            i.marker.icon
            span=user.profile.location
      .one.ui.bottom.attached.icon.buttons
          button.ui.editprofile.button(data-tooltip='Update Your Profile', data-position='bottom left')
            i.write.icon

  #loading.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column
    img.ui.centered.small.image(src='/heart.svg')
  #content.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column(style='display: none;')
    //-.ui.active.dimmer.feed
      .ui.large.text.loader Loading
    //- Input for creating new post at top of feed
    #newpost.ui.fluid.left.labeled.right.icon.input
      .ui.label
        if user.profile.picture
          img.ui.avatar.image(src='/user_post/'+user.profile.picture)
        else
          img.ui.avatar.image(src=user.gravatar(60))
      input(type='text', placeholder='Share your meal')
      i.big.photo.link.icon
    each val in script
      //- create a card for each post in val (if by user make the card a little different)
      //- if val.relativeTime - then post came from user_post (so user post, user reply to actor reply to user post)
      if val.relativeTime
        -var u_class;
        -if (val.actorAuthor) {u_class = "actorReply"}
        -else if (val.reply) {u_class = "userReply"}
        -else {u_class = "userPost"}
        .ui.fluid.card(postID=val.id, ui=user.ui, notify=user.notify, type=u_class, u_postID=val.replyID || val.postID || val.actorReplyID)
          if val.reply
            //- if post is a reply post -  add the post and populate the reply as well
            .content
              .right.floated.time.meta= (user.createdAt.getTime() + val.relativeTime)
              |
              a.ui.avatar.image(href='/me')
                if user.profile.picture
                  img(src='/user_post/'+user.profile.picture)
                else
                  img(src=user.gravatar(60))
              a(href='/me')
                span=user.profile.name || user.email || user.id
            .content
              .description(style="font-size:130%")=val.body
            .extra.content
              .ui.fluid.card
                .content
                  .right.floated.time.meta= (user.createdAt.getTime() + val.reply.time)
                  |
                  a(href='/user/'+val.reply.actor.username)   
                    img.ui.avatar.image(src='/profile_pictures/'+val.reply.actor.profile.picture)
                    span=val.reply.actor.profile.name
                .content
                  if val.reply.picture
                    img.post.ui.left.floated.small.image(src=val.reply.picture)
                  p=val.reply.body
            .three.ui.bottom.attached.icon.buttons
              //-.ui.reply.button(tabindex='0')
              .ui.button(tabindex='0')
                i.reply.icon
                |  Reply
              //-.ui.flag.button(tabindex='0')
              .ui.button(tabindex='0')
                i.flag.icon
                |  Flag
              if val.like
                //-.ui.red.like.button
                .ui.red.button
                  i.heart.icon
                  |  Like
              else
                //-.ui.like.button
                .ui.button
                  i.heart.icon
                  |  Like

          //- This is a actor reply to a user post
          else if val.actorAuthor
            .content
              .right.floated.time.meta= (user.createdAt.getTime() + val.relativeTime)
              |
              a(href='/user/'+val.actorAuthor.username)
                img.ui.avatar.image(src='/profile_pictures/'+val.actorAuthor.profile.picture)
                span=val.actorAuthor.profile.name
            .content
              .description(style="font-size:130%")=val.body
            .extra.content
              .ui.fluid.card
                .content
                  .right.floated.time.meta= (user.createdAt.getTime() + val.actorReplyORelativeTime)
                  |
                  a.ui.avatar.image(href='/me')
                    if user.profile.picture
                      img(src='/user_post/'+user.profile.picture)
                    else
                      img(src=user.gravatar(60))
                  a(href='/me')
                    span=user.profile.name || user.email || user.id
                .content
                  if val.actorReplyOPicture
                    img.post.ui.left.floated.small.image(src='/user_post/'+val.actorReplyOPicture)
                  p=val.actorReplyOBody
            .three.ui.bottom.attached.icon.buttons
              //-.ui.reply.button(tabindex='0')
              .ui.button(tabindex='0')
                i.reply.icon
                |  Reply
              //-.ui.flag.button(tabindex='0')
              .ui.button(tabindex='0')
                i.flag.icon
                |  Flag
              if val.like
                //-.ui.red.like.button
                .ui.red.button
                  i.heart.icon
                  |  Like
              else
                //-.ui.like.button
                .ui.button
                  i.heart.icon
                  |  Like

          //- This is a User made post
          else
            .content
              .right.floated.time.meta= (user.createdAt.getTime() + val.relativeTime)
              |  
              a.ui.avatar.image(href='/me')
                if user.profile.picture
                  img(src='/user_post/'+user.profile.picture)
                else
                  img(src=user.gravatar(60))
              a(href='/me')
                span=user.profile.name || user.email || user.id
            .image
              img(src='/user_post/'+val.picture)
            .content
              .description=val.body
            .three.ui.bottom.attached.icon.buttons
              //-.ui.reply.button(tabindex='0')
              .ui.button(tabindex='0')
                i.reply.icon
                |  Reply
              //-.ui.flag.button(tabindex='0')
              .ui.button(tabindex='0')
                i.flag.icon
                |  Flag
              if val.like
                //-.ui.red.like.button
                .ui.red.button
                  i.heart.icon
                  |  Like
              else
                //-.ui.like.button
                .ui.button
                  i.heart.icon
                  |  Like

      //-THIS is for posts by Actors, not the USER
      else
        .ui.fluid.card.dim(postID=val.id, ui=user.ui, transparency=user.transparency, notify=user.notify, state=val.state || 'unread', type='actor')
          //- dimmer DIV for flagging
          .ui.dimmer.flag
                .content
                  .center
                    h2.ui.inverted.icon.header
                      i.red.flag.icon
                      |  You&apos;ve flagged this!
                      h3.ui.inverted.header
                        span="The admins will review this post further. We are sorry you had this experience."
          //- Normal Base Post
          .content
            .right.floated.time.meta= (user.createdAt.getTime() + val.time)
            |  
            a(href='/user/'+val.actor.username)
              img.ui.avatar.image(src='/profile_pictures/'+val.actor.profile.picture)
              span=val.actor.profile.name
          .image
            img.post(src="/post_pictures/"+val.picture)
            //-img(src='/picture.svg', data-src=val.picture)
          .content
            .description=val.body
          .three.ui.bottom.attached.icon.buttons
            .ui.reply.button(tabindex='0')
              i.reply.icon
              |  Reply
            .ui.flag.button(tabindex='0')
              i.flag.icon
              |  Flag
            if val.like
              .ui.labeled.button(tabindex='0')
                .ui.red.like.button
                  i.heart.icon
                  |  Like
                a.ui.basic.red.left.pointing.label=val.likes
            else
              .ui.labeled.button(tabindex='0')
                .ui.like.button
                  i.heart.icon
                  |  Like
                a.ui.basic.red.left.pointing.label.count=val.likes
          if val.comments
            .content
              .ui.comments
                each comment in val.comments
                  if (user.createdAt.getTime() + comment.time) < Date.now()
                    .comment(commentID=comment.id)
                      a.avatar(href='/user/'+comment.actor.username)
                        img(src='/profile_pictures/'+comment.actor.profile.picture)
                      .content
                        a.author(href='/user/'+comment.actor.username)=comment.actor.profile.name
                        .metadata
                          span.date=(user.createdAt.getTime() + comment.time)
                          .rating
                            if comment.liked
                              i.red.heart.icon
                              span=comment.likes
                              | Likes 
                            else
                              i.heart.icon
                              span.num=comment.likes
                              |  Likes
                        .text=comment.body
                        .actions
                          if comment.liked
                            a.red.like.comment Like
                          else
                            a.like.comment Like
                          a.flag.comment Flag
          .extra.content
            if user.comment_prompt
              .description(style="text-align:center;background:#E8E8E8")="How is "+val.actor.profile.name+" Feeling?"
              #newcomment.ui.fluid.left.labeled.right.icon.input
                .ui.label            
                  if user.profile.picture
                    img.ui.avatar.image(src='/user_post/'+user.profile.picture)
                  else
                    img.ui.avatar.image(src=user.gravatar(60))
                input.newcomment(type='text', placeholder='Write to '+val.actor.profile.name)
                i.big.send.link.icon
            else
              #newcomment.ui.fluid.left.labeled.right.icon.input
                .ui.label
                  if user.profile.picture
                    img.ui.avatar.image(src='/user_post/'+user.profile.picture)
                  else
                    img.ui.avatar.image(src=user.gravatar(60))            
                input.newcomment(type='text', placeholder='Write a comment')
                i.big.send.link.icon
          if user.transparency == "yes"
            if val.read
              .content.read(style="text-align:center;background:#b5bfce;")
                p="You've read this!"
                a(href='/user/'+val.actor.username)
                  img.ui.avatar.image(src='/profile_pictures/'+val.actor.profile.picture)
                  span=val.actor.profile.name
                |  has been notified.
            else
              .content.read(style="text-align:center;background:#b5bfce;display: none;")
                p="You've read this!"
                a(href='/user/'+val.actor.username)
                  img.ui.avatar.image(src='/profile_pictures/'+val.actor.profile.picture)
                  span=val.actor.profile.name
                |  has been notified.

    .ui.fluid.card
      .content
        .description
        |  End of Posts for the last 24 hours.
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    //- New Reply Modal
    .ui.small.reply.modal
      i.close.icon
      .header Reply to Post
      .content
        form#replyform.ui.reply.form(action='/post/new', method='POST', enctype='multipart/form-data')
          input(type='hidden', name='_csrf', value=_csrf)
          input#replyInput(type='hidden', name='reply', value='a')
          .field
            textarea(rows='2', placeholder='Add your Reply', name='body')
          .ui.error.message
      .actions
        input.ui.green.button(type='submit', value='Submit', form='replyform')
